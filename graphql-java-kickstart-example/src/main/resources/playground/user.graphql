# Gets All user
query GET_ALL_USERS {
    users {
        id
        username
        name
        email
        phone
        website
    }
}

# Gets All user Paginated
query GET_ALL_USERS_PAGINATED {
    usersPaginated(number: 3, after: "2") {
        pageInfo {
            hasPreviousPage
            hasNextPage
            startCursor
            endCursor
        }
        edges {
            cursor
            node {
                id
                name
                username
                email
                phone
                website
                address {
                    street
                    suite
                    city
                    zipcode
                }
            }
        }
    }
}

query GET_USER_BY_ID($userId: ID) {
    userById(id: $userId) {
        id
        name
        username
    }
}

query GET_USER_BY_IDS {
    usersByIds(ids: [1, 2, 3]) {
        id
        name
        username
    }
}

query GET_USER_BY_ID_WITH_POSTS($userId: ID) {
    userById(id: $userId) {
        id
        name
        username
        posts {
            id
            title
        }
    }
}

query GET_USER_BY_ID_WITH_POSTS_AND_COMMENTS($userId: ID) {
    userById(id: $userId) {
        id
        name
        username
        posts {
            id
            title
            comments {
                id
                email
                name
                body
            }
        }
    }
}

mutation CREATE_USER(
    $name: String
    $phone: String
    $website: String
    $username: String
    $email: String
) {
    createUser(
        input: {
            name: $name
            phone: $phone
            website: $website
            username: $username
            email: $email
        }
    ) {
        id
        name
        phone
        website
        username
        email
    }
}

mutation UPDATE_USER_NAME(
    $userId: ID
    $name: String
    $phone: String
    $website: String
    $username: String
    $email: String
) {
    updateUser(
        id: $userId
        input: {
            name: $name
            phone: $phone
            website: $website
            username: $username
            email: $email
        }
    ) {
        id
        name
        phone
        website
        username
        email
    }
}

mutation DELETE_USER($userId: ID) {
    deleteUser(id: $userId)
}
